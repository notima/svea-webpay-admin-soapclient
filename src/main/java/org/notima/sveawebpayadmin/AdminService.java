package org.notima.sveawebpayadmin;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2021-09-28T16:32:46.147+02:00
 * Generated source version: 3.2.7
 *
 */
@WebServiceClient(name = "AdminService",
                  wsdlLocation = "file:src/main/resources/AdminService.210928.wsdl",
                  targetNamespace = "http://tempuri.org/")
public class AdminService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "AdminService");
    public final static QName AdminSoapService = new QName("http://tempuri.org/", "AdminSoapService");
    public final static QName WcfAdminSoapService = new QName("http://tempuri.org/", "WcfAdminSoapService");
    static {
        URL url = null;
        try {
            url = new URL("file:src/main/resources/AdminService.210928.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(AdminService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:src/main/resources/AdminService.210928.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public AdminService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AdminService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AdminService() {
        super(WSDL_LOCATION, SERVICE);
    }





    /**
     *
     * @return
     *     returns IAdminService
     */
    @WebEndpoint(name = "AdminSoapService")
    public IAdminService getAdminSoapService() {
        return super.getPort(AdminSoapService, IAdminService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IAdminService
     */
    @WebEndpoint(name = "AdminSoapService")
    public IAdminService getAdminSoapService(WebServiceFeature... features) {
        return super.getPort(AdminSoapService, IAdminService.class, features);
    }


    /**
     *
     * @return
     *     returns IAdminService
     */
    @WebEndpoint(name = "WcfAdminSoapService")
    public IAdminService getWcfAdminSoapService() {
        return super.getPort(WcfAdminSoapService, IAdminService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IAdminService
     */
    @WebEndpoint(name = "WcfAdminSoapService")
    public IAdminService getWcfAdminSoapService(WebServiceFeature... features) {
        return super.getPort(WcfAdminSoapService, IAdminService.class, features);
    }

}
